package{	import Box2D.Collision.*;	import Box2D.Collision.Shapes.*;	import Box2D.Common.Math.*;	import Box2D.Dynamics.*;		import com.neriksworkshop.lib.ASaudio.Track;		import flash.display.*;	import flash.events.*;	import flash.net.URLRequest;
	
		/*---		@author: Lewen Yu		---*/		public class Actor extends EventDispatcher	{		//here are the two things we need to link together		protected var _body:b2Body; //the data		protected var _costume:Sprite; //the sprite				protected var _allowRotation:Boolean = true; //should the body rotate like a real physics object? Avoid for characters and enemies				public function get canHandleContact():Boolean { return true; }				public function Actor(myBody:b2Body, myCostume:Sprite, allowRotation:Boolean)		{			_body = myBody;			_costume = myCostume;			_body.SetUserData(this);			_allowRotation = allowRotation;			updateNow();		}				protected function refresh(myBody:b2Body, myCostume:Sprite, allowRotation:Boolean):void		{			_body = myBody;			_costume = myCostume;			_body.SetUserData(this);			_allowRotation = allowRotation;			updateNow();		}				protected function getTextureFromFile(textureLoc:String):BitmapData		{			var bitmapData:BitmapData;						var loader:Loader = new Loader();			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onComplete);			loader.load(new URLRequest("art/" + textureLoc));						function onComplete (event:Event):void			{				bitmapData = Bitmap(LoaderInfo(event.target).content).bitmapData;			}						return bitmapData;		}				public function destroy():void		{			//remove event listeners, misc cleanup			cleanUpBeforeRemoving();						//remove the costume sprite from display			_costume.parent.removeChild(_costume);						//remove actor from the world			PhysiVals.world.DestroyBody(_body);					}				protected function cleanUpBeforeRemoving():void		{			//this function does nothing here		}				public function updateNow():void		{			updateMyLook();						updateOtherThings();						}				public function get body():b2Body { return _body; }				public function get sprite():Sprite { return _costume; }				private function updateMyLook():void		{			_costume.x = _body.GetPosition().x * PhysiVals.RATIO;			_costume.y = _body.GetPosition().y * PhysiVals.RATIO;			if (_allowRotation) {				_costume.rotation = _body.GetAngle() * 180 / Math.PI;			} else {				_body.SetAngularVelocity(0);				_body.m_sweep.a = 0;				_costume.rotation = _body.GetAngle() * 180 / Math.PI;			}					}				protected function playSFX(soundFile:String):void 		{			var soundFX:Track = new Track("sfx/" + soundFile);			soundFX.loop = false;			soundFX.start();					}				protected function playShortBGM(soundFile:String):void		{			var shortBgm:Track = new Track("soundtrack/" + soundFile);			shortBgm.loop = false;			shortBgm.start();		}				public function handleContact(otherObj):void		{			//this does nothing			//I expect it to be overriden by my children		}				protected function updateOtherThings():void		{			//this does nothing			//I expect it to be called by my children		}	}	}