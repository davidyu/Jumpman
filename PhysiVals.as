package{	import Box2D.Collision.*;	import Box2D.Common.Math.*;	import Box2D.Dynamics.*;		/*-----		@author: Lewen Yu		----*/	public class PhysiVals	{		public static const RATIO:Number = 30;		private static var _gravity:b2Vec2 = new b2Vec2(0, 30);		private static var _world:b2World;				public function PhysiVals()		{					}				static public function get gravity():b2Vec2 { return _gravity; }				static public function set gravity(value:b2Vec2):void		{			_gravity = value;		}				static public function get world():b2World { return _world; }				static public function set world(value:b2World):void		{			_world = value;		}				static public function meters(Pixels:Number):Number		{			return Pixels / RATIO;		}				static public function pixels(Meters:Number):Number		{			return Meters * RATIO;		}				static public function degrees(Radians:Number):Number		{			return Radians * (Math.PI/180);		}				static public function playerNormalToCollidedNormal(angle:Number):Number		{			if(angle <= 180 && angle >= 0) {				return 180 - angle;			} else {				return -180 - angle;			}		}					}}